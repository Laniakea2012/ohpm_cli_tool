"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EncryptFactory=void 0;const t=require("../EncryptType"),r=require("../impl/AESEncrypt"),n=require("../../../core/audit/utils/HexUtils"),c=e(require("../../../log"));class y{static encrypt(e,t,r,o){c.default.debug("",`start encrypt content, key-len: ${e.length}, content-len: ${t.length}`);const p=y.getEncrypterByType(r).encrypt(e,n.HexUtils.generateRandomIv(),Buffer.from(t,"utf-8"),o),u=n.HexUtils.byteArray2HexString(Array.from(p));return c.default.debug("",`encrypt content succeed, chiperText: ${u}`),u}static decrypt(e,t,r,o){c.default.debug("",`start decrypt content, key-len: ${e.length}, content-len: ${t.length}`);const p=y.getEncrypterByType(r).decrypt(e,Buffer.from(n.HexUtils.hexString2ByteArray(n.HexUtils.getIvFromContent(t))),Buffer.from(n.HexUtils.hexString2ByteArray(n.HexUtils.getEncryptContent(t))),o);return c.default.debug("",`decrypt content succeed, plainText-len: ${p.length}`),p}static getEncrypterByType(e){if(e===t.EncryptType.AES)return r.AESEncrypt.getInstance();throw new Error("unsupported encryption algorithm!")}}exports.EncryptFactory=y;