"use strict";var e=this&&this.__awaiter||function(e,t,r,a){return new(r||(r=Promise))((function(i,o){function n(e){try{l(a.next(e))}catch(e){o(e)}}function s(e){try{l(a.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(n,s)}l((a=a.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ParameterizationConfigFile=void 0;const r=require("../../config"),a=t(require("path")),i=require("../../common/Constants"),o=require("../../util/FsUtil"),n=t(require("../../log")),s=require("./types"),l=require("./index"),h=require("../../util"),m=t(require("fs-extra")),f=require("../../common/message"),d=t(require("semver")),P=require("../dependency/util"),E=require("../override-dependency-map/readProjectOhPackageJson5");class u{constructor(){this.loaded=!1,this.parameterJson={},this.parameterFilePath=""}isLoaded(){return this.loaded}isParameterFileConfiged(){return e(this,void 0,void 0,(function*(){const e=r.config.getProjectRoot(),t=a.default.join(e,i.Constants.MyPackageJson);yield this.validProjectRoot(e,t);const o=yield(0,E.readProjectOhPackageJson5)();if(this.validPkgJson(o),!o.parameterFile)return!1;let s="";try{if(s=(0,l.getObjectValueByKey)(u.KEY_PARAMETER_FILE_PATH,o),!s)return!1}catch(e){return n.default.error("",`Found exception while get "${u.KEY_PARAMETER_FILE_PATH}" path from ${i.Constants.MyPackageJson}, ${e}`),!1}if(s=a.default.resolve(r.config.getProjectRoot(),s),!h.FsBlockingUtil.existsSync(s))throw new Error((0,f.format)(f.Messages.Parameterization.ConfiguredProjectLevelParameterFileNotExist,{parameterPath:s}));if(!this.isFilePath(s))throw new Error((0,f.format)(f.Messages.Parameterization.InvalidFilePathError,{filename:`${i.Constants.MyPackageJson}`}));if(!this.isFileNotEmpty(s))throw new Error((0,f.format)(f.Messages.Parameterization.FileContentEmptyError,{filepath:`${s}`}));return!0}))}validPkgJson(e){if(!e)throw new Error(f.Messages.Parameterization.FileEmptyError)}validProjectRoot(t,r){return e(this,void 0,void 0,(function*(){if(!t||!(yield o.FsUtil.exists(r)))throw new Error(f.Messages.Parameterization.NotFoundProjectRootError)}))}loadParameterFile(){return e(this,void 0,void 0,(function*(){if(this.isLoaded())return;n.default.debug("","start load parameterFile.");const e=Date.now();if(r.config.getParameterFilePath()?(n.default.debug("","The path of the parameterFile is obtained from the CLI."),this.parameterFilePath=r.config.getParameterFilePath()):this.parameterFilePath=yield this.getParameterFilePathFromProjectRoot(),!h.FsBlockingUtil.existsSync(this.parameterFilePath))throw new Error((0,f.format)(f.Messages.Parameterization.ParameterFileNotExist,{parameterFilePath:this.parameterFilePath}));if(!this.isFilePath(this.parameterFilePath))throw new Error((0,f.format)(f.Messages.Parameterization.InvalidFilePathError,{filename:`${i.Constants.MyPackageJson}`}));if(!this.isFileNotEmpty(this.parameterFilePath))throw new Error((0,f.format)(f.Messages.Parameterization.FileContentEmptyError,{filepath:`${this.parameterFilePath}`}));this.parameterJson=yield o.FsUtil.readJSON5(this.parameterFilePath),this.parameterJson?yield this.validParameters(this.parameterJson):n.default.warn("",`the content of ${u.KEY_PARAMETER_FILE_PATH} is empty in ${this.parameterFilePath}`),this.loaded=!0,n.default.debug("",`load parameterFile completed in ${(0,h.calculateCostTime)(e)}.`)}))}validParameters(t){return e(this,void 0,void 0,(function*(){if(!t)return;const e=Object.keys(t);for(const r of e){this.validKey(r);const e=(0,l.getObjectValueByKey)(r,t);if("string"==typeof e)this.validVersion(e);else{if("object"!=typeof e)throw new Error((0,f.format)(f.Messages.Parameterization.VersionTypeError));yield this.validParameters(e)}}}))}findVersion(t){return e(this,void 0,void 0,(function*(){if(n.default.debug("",`start find parameter version of ${t}.`),!this.preFind(t))return n.default.warn("",`parameterKey '${t}' is empty or invalid!`),t;const e=t.slice(u.KEY_PARAMETER_INDEX_START).split(u.KEY_PARAMETER_SPILITER);return this.postFind(e,this.matchValueWithParameterizationKey(e,this.parameterJson))}))}matchValueWithParameterizationKey(e,t){let r="",a="";for(let i=0;i<e.length;i++){let o=0;for(let n=i;n<e.length;n++){const s=e.slice(i,n+1).join("."),l=this.getValueFromJson(s,a,t);if(l){if("object"==typeof l){a=l,i+=o>0?o:0;break}n===e.length-1&&o>0&&(i+=o),i===e.length-1&&(r=l),o++}else o++}if(!a)break}return r}getValueFromJson(e,t,r){return t=t?(0,l.getObjectValueByKey)(e,t):(0,l.getObjectValueByKey)(e,r)}preFind(e){return n.default.debug("",`start pre-find, parameterKey: ${e}.`),!!e&&u.REGEX_PARAMETER.test(e)}postFind(e,t){if(n.default.debug("",`start post-find, parameter path size: ${e.length}.`),!t)throw new Error((0,f.format)(f.Messages.Parameterization.ParameterUnExistError,{parameterPath:e.join("."),filePath:this.parameterFilePath}));if("string"!=typeof t)throw new Error((0,f.format)(f.Messages.Parameterization.InvalidParameterConfigError,{parameterPath:e.join("."),filePath:this.parameterFilePath}));return n.default.debug("",`find parameter version succeed: '@param:${e.join(".")}' -> '${t}'.`),t}getParameterFilePathFromProjectRoot(){return e(this,void 0,void 0,(function*(){const e=r.config.getProjectRoot(),t=a.default.join(e,i.Constants.MyPackageJson);yield this.validProjectRoot(e,t);const o=yield(0,E.readProjectOhPackageJson5)();if(this.validPkgJson(o),!o.parameterFile)throw new Error((0,f.format)(f.Messages.Parameterization.ParameterFileNotConfigError,{configName:u.KEY_PARAMETER_FILE_PATH,ohPkgName:i.Constants.MyPackageJson}));const n=(0,l.getObjectValueByKey)(u.KEY_PARAMETER_FILE_PATH,o);if(!n)throw new Error((0,f.format)(f.Messages.Parameterization.FilePathEmptyError,{configName:u.KEY_PARAMETER_FILE_PATH,ohPkgPath:t}));return a.default.resolve(e,n)}))}isFilePath(e){try{const t=m.default.statSync(e);return t&&t.isFile()}catch(t){return n.default.error("isFilePath",`Read file: ${e} stat failed, ${t}`),!1}}isFileNotEmpty(e){try{const t=m.default.readFileSync(e,"utf8");return!(!t||!t.trim())}catch(t){return n.default.error("isFileNotEmpty",`Read file: ${e} content failed, ${t}`),!1}}validKey(e){if(!e)throw new Error((0,f.format)(f.Messages.Parameterization.KeyEmptyError));if(!u.REGEX_PARAMETER_KEY.test(e))throw new Error((0,f.format)(f.Messages.Parameterization.InvalidKeyError,{key:`${e}`}))}validVersion(e){if(!e||!e.trim())throw new Error((0,f.format)(f.Messages.Parameterization.VersionEmptyError));if("*"===(e=e.trim())||"latest"===e)return;if(!d.default.validRange(e,{loose:!0,includePrerelease:!0})&&!(0,P.isStandardTagDependency)(e))throw new Error((0,f.format)(f.Messages.Parameterization.InvalidVersionError,{version:`${e}`}))}}exports.ParameterizationConfigFile=u,u.KEY_PARAMETER_FILE_PATH="parameterFile",u.KEY_PARAMETER_INDEX_START=s.PREFIX_PARAMETER.length,u.KEY_PARAMETER_SPILITER=".",u.REGEX_PARAMETER=/^@param:.+([.].+)*/,u.REGEX_PARAMETER_KEY=/(?=^(@(?![0-9\-_])[a-z0-9\-_]+(?<![-_])\/)?(?![0-9\-_.])[a-z0-9\-_.]+(?<![-_.])$).{1,128}$/i;